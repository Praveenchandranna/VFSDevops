# Unique name for this workflow
name: Deploy integration branch to integration and staging/uat orgs

# Definition when the workflow should run
on:
    push:
      branches: [ Hotfix ]
      paths:
        - 'force-app/**'
            

# Jobs to be executed
jobs:
    Production_and_Hotfix_Deployment:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version
            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0                 
            - name: Running on the default branch.
              if: steps.branch-name.outputs.is_default == 'true'
              run: |
                echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}" 
              # Outputs: "Running on default: main"
            
            - name: Get Head Ref branch name (i.e The current pull request branch)
              run: |
                echo "${{ steps.branch-name.outputs.head_ref_branch }}"
              # Outputs: "feature/test" current PR branch.

            
            - name: Running on a pull request branch.
              if: steps.branch-name.outputs.is_default == 'false'
              run: |
                echo "Base branch: ${{ steps.branch-name.outputs.base_ref_branch }}"
              # Outputs: "Base branch: main"
              
            - name: Running on any event
              run: |
                echo "Default branch: ${{ steps.branch-name.outputs.default_branch }}"
              # Outputs: "Default branch: main"

            # List of project present in the repo

            - name: 'List of project present in the repo'
              run: |
                  ls -ltr
                  java -version
            # Store secret for both orgs
            - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
              shell: bash
              run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
                  
            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/                 
            # Authenticate to Production org
            - name: 'Authenticate to Production Org'
              run: sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY_QA }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_QA_USERNAME }} --setdefaultdevhubusername


            # Validation for Production
            - name: 'Validation Against Production org'
              run: sfdx force:source:deploy --checkonly -p force-app --testlevel NoTestRun -u ${{ secrets.SALESFORCE_QA_USERNAME }}


            # Deployment in production
            - name: 'Deploy To Production org'
              run: sfdx force:source:deploy -p force-app --testlevel NoTestRun -u ${{ secrets.SALESFORCE_QA_USERNAME }}
              
            # Authenticate to hotfix Org
            - name: 'Authenticate to hotfix Org'
              run: sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY_UAT }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_UAT_USERNAME }} --setdefaultdevhubusername

            # Authenticate to org
            - name: 'Deploy To Hotfix org'
              run: sfdx force:source:deploy -p force-app --testlevel NoTestRun -u ${{ secrets.SALESFORCE_UAT_USERNAME }}