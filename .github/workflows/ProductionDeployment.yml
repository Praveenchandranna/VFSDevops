---
name: Deploy integration branch to integration and staging/uat orgs
on:
  push:
    branches:
      - Hotfix
    paths:
      - force-app/**
jobs:
  Production_and_Hotfix_Deployment:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Install Salesforce CLI
        run: >
          wget
          https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz

          mkdir ~/sfdx

          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1

          echo "$HOME/sfdx/bin" >> $GITHUB_PATH

          ~/sfdx/bin/sfdx version
      - name: Installing sfdx git delta
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins 
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: List of project present in the repo
        run: |
          ls -ltr
          java -version     
      - name: Installing sfdx git delta
        run: CURRENT_COMMIT_HASH="$(git rev-parse --short HEAD)"
      - if: ${{ ! git show ${CURRENT_COMMIT_HASH} | grep -q  }}
      - run: |
          echo "Single commit directly added to branch, versioning only works for
          branch merge."

          return 0
      - run: |
          BITBUCKET_PR_SOURCE_BRANCH=$(git show ${CURRENT_COMMIT_HASH} | grep -oP
          'Merged in \K.*(?= \(pull request)')

          echo "BITBUCKET_PR_SOURCE_BRANCH: ${BITBUCKET_PR_SOURCE_BRANCH}"

          IFS='/' read -ra BRANCH_PARTS <<< "${BITBUCKET_PR_SOURCE_BRANCH}" # split branch name by '/'
          if: {[ "${#BRANCH_PARTS[@]}" -eq 0 ]}
      - run: echo "No branch prefix specified, this commit wont be versioned."
      - name: Populate auth file with SFDX_URL secret of the integration and staging orgs
        shell: bash
        run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
      - name: Create delta packages for new, modified or deleted metadata
        run: |
          mkdir changed-sources 
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/                 
      - name: Authenticate to Production Org
        run: sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY_QA}} --jwtkeyfile=server.key --username=${{secrets.SALESFORCE_QA_USERNAME }} --setdefaultdevhubusername
      - name: Validation Against Production org
        run: sfdx force:source:deploy --checkonly -p force-app --testlevel NoTestRun -u ${{ secrets.SALESFORCE_QA_USERNAME }}
      - name: Deploy To Production org
        run: sfdx force:source:deploy -p force-app --testlevel NoTestRun -u ${{secrets.SALESFORCE_QA_USERNAME }}
      - name: Authenticate to hotfix Org
        run: sfdx force:auth:jwt:grant --clientid=${{secrets.SALESFORCE_CONSUMER_KEY_UAT }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_UAT_USERNAME }} --setdefaultdevhubusername
      - name: Deploy To Hotfix org
        run: sfdx force:source:deploy -p force-app --testlevel NoTestRun -u ${{secrets.SALESFORCE_UAT_USERNAME }}
